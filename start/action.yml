name: On-demand self-hosted AWS EC2 runner for GitHub Actions with windows support
description: GitHub Action for automatic creation and registration AWS EC2 instance as a GitHub Actions self-hosted runner.
author: Volodymyr Machula
branding:
  icon: 'box'
  color: 'orange'
inputs:
  github-token:
    description: >-
      GitHub Personal Access Token with the 'repo' scope assigned.
    required: true
  runner-version:
    description: >-
      Version of the Runner software to use. Defaults to 'latest'. Use 'none' to skip install
    required: false
    default: latest
  ec2-image-id:
    description: >-
      EC2 Image Id (AMI). The new runner will be launched from this image.
    required: true
  ec2-instance-type:
    description: >-
      EC2 Instance Type.
    required: true
  ec2-os:
     description: >-
       Base OS type of the EC2 image (AMI). The new runner needs to be configured based on OS and architecture:
         - 'windows'
         - 'linux'
     required: false
     default: linux
  max-retries:
    description: >-
      Maximum number of attempts for starting
    required: false
    default: '1'
  subnet-id:
    description: >-
      VPC Subnet Id. The subnet should belong to the same VPC as the specified security group.
    required: true
  security-group-id:
    description: >-
      EC2 Security Group Id.
      The security group should belong to the same VPC as the specified subnet.
      The runner doesn't require any inbound traffic. However, outbound traffic should be allowed.
    required: true
  iam-role-name:
    description: >-
      IAM Role Name to attach to the created EC2 instance.
      This requires additional permissions on the AWS role used to launch instances.
    required: false
  aws-resource-tags:
    description: >-
      Tags to attach to the launched EC2 instance and volume.
      This must be a stringified array of AWS Tag objects, with both Key and Value fields,
      for example: '[{"Key": "TagKey1", "Value": "TagValue1"}, {"Key": "TagKey2", "Value": "TagValue2"}]'
    required: false
    default: '[]'
  runner-home-dir:
    description: >-
      Directory to install actions-runner or directory that contains actions-runner software and scripts. E.g. /home/runner/actions-runner.
    required: false
  aws-key-pair-name:
    description: >-
      The AWS Key Pair Name to be associated to the instance
    required: false
  pre-runner-script:
    description: >-
      Specifies bash commands to run before the runner starts. It's useful for installing dependencies with apt-get, yum, dnf, etc.
    required: false
  spot:
    description: >-
      Use Spot instances?
    required: false
    default: 'false'
  volume-size:
    description: >-
      Specifies the size of the volume in GiB
    required: false
  volume-type:
    description: >-
      Specifies the type of volume to create
    required: false
  volume-throughput:
    description: >-
      Specifies the throughput the volume will support, in MiB/s
    required: false
  volume-iops:
    description: >-
      Specifies the IOPS for the volume
    required: false
  volume-device-name:
    description: >-
      EC2 Block Storage Volume Device Name.
      For example, /dev/sdh or xvdh.
      Used for configuring the mount path of the volume if you're overriding the default volume size of the EC2 instance.
      The parameter `volume-size` must also be configured when using this parameter.
      This parameter must be configured when using the `volume-size` parameter.
    required: false
  associate-public-ip:
    description: >-
      Specifies whether to assign a public IPv4 address to an Instance.
      The default value is 'true'
    required: false

outputs:
  label:
    description: >-
      Name of the unique label assigned to the runner.
      The label is used in two cases:
      - to use as the input of 'runs-on' property for the following jobs;
      - to remove the runner from GitHub when it is not needed anymore.
  ec2-instance-id:
    description: >-
      EC2 Instance Id of the created runner.
      The id is used to terminate the EC2 instance when the runner is not needed anymore.
runs:
  using: node20
  main: ../dist/start.js
